---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: lake-db
spec:
  instances: 1
  storage:
    size: 1Gi
    storageClass: openebs-hostpath
  resources:
    requests:
       cpu: 0.5
    limits: 
      memory: 2Gi
  # Handle Rollout Upgrades Automatically:
  primaryUpdateStrategy: unsupervised
  # Enable Super User Access for proper db recovery
  enableSuperuserAccess: true
  superuserSecret:
    name: postgres-secrets
  monitoring:
    enablePodMonitor: true
    # Ref: https://github.com/cloudnative-pg/cloudnative-pg/issues/2501
    podMonitorMetricRelabelings:
      - { sourceLabels: ["cluster"], targetLabel: cnpg_cluster, action: replace }
      - { regex: cluster, action: labeldrop }
  # AWS Backup Settings
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
      destinationPath: s3://ronin-database-backups/auth-db-dev/
      s3Credentials:
        accessKeyId:
          name: postgres-secrets
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: postgres-secrets
          key: AWS_ACCESS_SECRET
---
apiVersion: v1
kind: Service
metadata:
  name: lakedb-lb
  annotations:
    # external-dns.alpha.kubernetes.io/hostname: postgres.devbu.io
    coredns.io/hostname:  "lake2.db.dev.${SECRET_DOMAIN}"
    io.cilium/lb-ipam-ips: 192.168.3.58
spec:
  type: LoadBalancer
  ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    cnpg.io/cluster: lake-db
    role: primary